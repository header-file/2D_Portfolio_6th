#pragma once
/*
에이스타(A*) 알고리즘 - 시작점부터 끝지점까지 사이에서 경로를 선택할 때, 가장 가까운 진로들을 선택해서 최단거리를 구함
다익스트라 알고리즘 - 시작점부터 끝지점까지의 모든 경로를 계산해서 최단거리를 구함

다익스트라는 맵이 고정되어있을 경우 효율적이고
에이스타는 맵이 계속 바뀌는 경우 효율적이다.

에이스타 공식
F = G(시작 지점에서 다음 지점으로 이동할 때 소모되는 비용) + H(현재 위치에서 목적지까지 소모되는 비용)

에이스타의 경우 목적지까지의 길이 막혀 있을 때, 모든 맵 이동을 확인한 후에야 이를 인지하게 되는 단점이 있다.

에이스타 실행 과정(정방형 타일 구조 맵 기준) - 상하좌우 이동은 10, 대각선 이동은 14로 계산
장애물 X
1. 시작점 주위의 8개의 타일을 Open list(검색 대상)에 삽입.
2. 각 타일에서의 F 값을 계산
3. 8개의 타일 중 제일 작은 F값을 가진 곳으로 이동 - Close list(이동 경로)
장애물 O 
4. 이동한 타일을 기준으로 목적지에 도착할 때까지 다시 계산해서 이동 -> Clost list에 추가
5. Tile 속성에 시작점, 목적지, 장애물을 추가해야 함
6. 장애물에 의해 이동이 불가능하면, 이전 노드로 돌아가 다시 계산

*/